---
import SunIcon from "./Icons/Sun.astro";
import MoonIcon from "./Icons/Moon.astro";
---

<input
  type="checkbox"
  id="dark-mode-toggle"
  class="hidden"
  aria-label="Toggle dark mode"
/>
<div class="switcher">
  <label for="dark-mode-toggle" class="sun">
    <SunIcon />

    <span class="sr-only">Dark mode</span>
  </label>

  <label for="dark-mode-toggle" class="toggle">
    <div class="toggle__circle"></div>
  </label>

  <label for="dark-mode-toggle" class="moon">
    <MoonIcon />

    <span class="sr-only">Light mode</span>
  </label>
</div>

<style>
  .switcher {
    gap: 16px;
    display: flex;
    width: 100%;
    justify-content: center;
    align-items: center;
  }

  .switcher :global(.start) {
    stop-color: #c5c5c6;
    transition: stop-color 0.2s ease-in-out;
  }

  .switcher :global(.end) {
    stop-color: #c5c5c6;
    transition: stop-color 0.2s ease-in-out;
  }

  .switcher label:hover :global(.start) {
    stop-color: #ee0a78;
  }

  .switcher label:hover :global(.end) {
    stop-color: #fe620a;
  }

  @media (max-width: 767px) {
    :global(html:not(.dark)) .sun :global(.start) {
      stop-color: #ee0a78;
    }

    :global(html:not(.dark)) .sun :global(.end) {
      stop-color: #fe620a;
    }

    :global(.dark) .moon :global(.start) {
      stop-color: #ee0a78;
    }

    :global(.dark) .moon :global(.end) {
      stop-color: #fe620a;
    }
  }

  .toggle {
    width: 48px;
    height: 24px;
    border-radius: 20px;

    background: linear-gradient(90deg, #ee0a78 0%, #fe620a 100%);
  }

  .toggle__circle {
    width: 20px;
    height: 20px;
    border-radius: 50%;
    background-color: #fff;
    margin: 2px;
    transition: transform 0.2s ease-in-out;
  }

  :global(.dark) .toggle__circle {
    transform: translateX(24px);
  }

  .toggle__circle.active {
    transform: translateX(24px);
  }

  label:not(.toggle) {
    width: 24px;
    height: 24px;
    display: flex;
    justify-content: center;
    align-items: center;
    cursor: pointer;
  }

  @media (min-width: 768px) {
    .toggle {
      display: none;
    }

    :global(.dark) .sun {
      display: none;
    }

    :global(html:not(.dark)) .moon {
      display: none;
    }

    :is(.sun, .moon) :global(.start),
    :is(.sun, .moon) :global(.end) {
      stop-color: white;
    }

    :global(html:not(.dark)) :is(.sun, .moon) :global(.start),
    :global(html:not(.dark)) :is(.sun, .moon) :global(.end) {
      stop-color: #28292c;
    }
  }
</style>

<script is:inline>
  const theme = (() => {
    if (typeof localStorage !== "undefined" && localStorage.getItem("theme")) {
      return localStorage.getItem("theme");
    }
    if (window.matchMedia("(prefers-color-scheme: dark)").matches) {
      return "dark";
    }
    return "light";
  })();

  const toggle = document.getElementById("dark-mode-toggle");

  if (theme === "light") {
    document.documentElement.classList.remove("dark");
    toggle.checked = false;
  } else {
    document.documentElement.classList.add("dark");
    toggle.checked = true;
  }

  window.localStorage.setItem("theme", theme);

  const handleToggleClick = () => {
    const element = document.documentElement;
    element.classList.toggle("dark");

    const isDark = element.classList.contains("dark");
    localStorage.setItem("theme", isDark ? "dark" : "light");
  };

  toggle.addEventListener("click", handleToggleClick);
</script>
