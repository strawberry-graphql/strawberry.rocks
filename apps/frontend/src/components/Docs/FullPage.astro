---
// @ts-ignore
import toc from "markdown-toc";
import matter from "gray-matter";
import Layout from "../../layouts/Layout.astro";
import Markdown from "../../components/Markdown.astro";
import Sidebar from "../../components/Docs/Sidebar.astro";
import TableOfContents from "../../components/Docs/TableOfContents.astro";
import Footer from "../../components/Docs/Footer.astro";

interface Props {
  prNumber?: string | undefined;
  content: string;
  breadcrumbs: Array<{ title: string; url: string }>;
  authors: Array<{ name: string; avatarUrl: string; login: string | null }>;
}

const { content, prNumber, authors, breadcrumbs } = Astro.props;
const { content: markdownContent, data } = matter(content);

const tableOfContents = toc(markdownContent, {
  maxdepth: 1,
  // apparently max depth doesn't work
  // TODO: maybe use a better package
  // @ts-ignore
}).json.filter((item: any) => item.lvl <= 2);

let title = data.title;

if (prNumber) {
  title = `[Preview] ${title}`;
}
---

<Layout title={title} useDocsGrid prNumber={prNumber}>
  <main class="docs-grid">
    <Sidebar />

    <nav class="breadcrumbs sr-only">
      <ul>
        {
          breadcrumbs.map((breadcrumb, index) => (
            <li id={index === 0 ? "main-category" : ""}>
              <a href={breadcrumb.url}>{breadcrumb.title}</a>
            </li>
          ))
        }
        <li>{title}</li>
      </ul>
    </nav>

    <article class="typography-paragraph" id="docs-content">
      <Markdown content={markdownContent} />

      <Footer authors={authors} />
    </article>

    <aside class="page-nav">
      <TableOfContents toc={tableOfContents} />
    </aside>
  </main>
</Layout>

<style>
  #docs-content {
    grid-column: content-start / content-end;
    min-width: 0;
  }
</style>
