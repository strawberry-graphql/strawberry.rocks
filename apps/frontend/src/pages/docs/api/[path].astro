---
import { promises as fs } from "fs";
import Layout from "../../../layouts/Layout.astro";
import Function from "../../../components/ApiDocs/Function.astro";
import Class from "../../../components/ApiDocs/Class.astro";

export async function getStaticPaths() {
  const data = JSON.parse(
    await fs.readFile("./src/content/api/strawberry.json", "utf-8"),
  );
  const paths: Array<string> = [];

  const addPaths = (members: any, currentPath: string) => {
    for (const member of members) {
      if (member.kind === "alias") {
        paths.push(`${currentPath}.${member.name}`);
      }
    }
  };

  addPaths(data.members, "strawberry");

  return paths.map((path) => ({ params: { path } }));
}

const data = JSON.parse(
  await fs.readFile("./src/content/api/strawberry.json", "utf-8"),
);

const { path } = Astro.params;
const parts = path.split(".").slice(1);

const findMember = (parts: string[]) => {
  let current = data;

  for (const part of parts) {
    const sub = current.members.find((member) => member.name === part);

    if (!sub) {
      throw new Error(`Could not find member ${part}`);
    }

    current = sub;
  }

  return current;
};

let current = findMember(parts);

while (current.kind === "alias") {
  current = findMember(current.target_path.split(".").slice(1));
}
---

<Layout title="API Docs">
  <main class="docs-grid">
    <aside>Nav</aside>

    <article>
      {current.kind === "function" && <Function fun={current} />}
      {current.kind === "class" && <Class klass={current} />}
    </article>
  </main>
</Layout>
